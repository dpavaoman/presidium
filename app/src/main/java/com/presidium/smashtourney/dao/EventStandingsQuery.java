//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.1.0'.
//
package com.presidium.smashtourney.dao;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.presidium.smashtourney.dao.adapter.EventStandingsQuery_ResponseAdapter;
import com.presidium.smashtourney.dao.adapter.EventStandingsQuery_VariablesAdapter;
import com.presidium.smashtourney.dao.selections.EventStandingsQuerySelections;

import java.io.IOException;
import java.util.List;

public class EventStandingsQuery implements Query<EventStandingsQuery.Data> {
  public static final String OPERATION_ID = "e0c65801e8f6d92535b2edad28ab5727d0f429a301c9cee132edfa0c1e320a8e";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query EventStandings($eventId: ID!) {
   *   event(id: $eventId) {
   *     id
   *     name
   *     standings(query: {
   *       perPage: 3
   *       page: 1
   *     }
   *     ) {
   *       nodes {
   *         placement
   *         entrant {
   *           id
   *           name
   *         }
   *       }
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query EventStandings($eventId: ID!) { event(id: $eventId) { id name standings(query: { perPage: 3 page: 1 } ) { nodes { placement entrant { id name } } } } }";

  public static final String OPERATION_NAME = "EventStandings";

  public final String eventId;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  private transient volatile String $toString;

  public EventStandingsQuery(String eventId) {
    this.eventId = eventId;
  }

  public EventStandingsQuery() {
    this.eventId = "eventId";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof EventStandingsQuery) {
      EventStandingsQuery that = (EventStandingsQuery) o;
      return ((this.eventId == null) ? (that.eventId == null) : this.eventId.equals(that.eventId));
    }
    return false;
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int h = 1;
      h *= 1000003;
      h ^= (eventId == null) ? 0 : eventId.hashCode();
      $hashCode = h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public String toString() {
    if ($toString == null) {
      $toString = OPERATION_DOCUMENT;
    }
    return $toString;
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters)
      throws IOException {
    EventStandingsQuery_VariablesAdapter.INSTANCE.toJson(writer, customScalarAdapters, this);
  }

  @Override
  public Adapter<Data> adapter() {
    return new ObjectAdapter<Data>(EventStandingsQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.presidium.smashtourney.dao.type.Query.type
    )
    .selections(EventStandingsQuerySelections.root)
    .build();
  }

  public static class Data implements Query.Data {
    /**
     * Returns an event given its id or slug
     */
    public Event event;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Data(Event event) {
      this.event = event;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.event == null) ? (that.event == null) : this.event.equals(that.event));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (event == null) ? 0 : event.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "event=" + event
          + "}";
      }
      return $toString;
    }
  }

  public static class Event {
    public String id;

    /**
     * Title of event set by organizer
     */
    public String name;

    /**
     * Paginated list of standings
     */
    public Standings standings;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Event(String id, String name, Standings standings) {
      this.id = id;
      this.name = name;
      this.standings = standings;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Event) {
        Event that = (Event) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         &&((this.standings == null) ? (that.standings == null) : this.standings.equals(that.standings));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (id == null) ? 0 : id.hashCode();
        h *= 1000003;
        h ^= (name == null) ? 0 : name.hashCode();
        h *= 1000003;
        h ^= (standings == null) ? 0 : standings.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Event{"
          + "id=" + id + ", "
          + "name=" + name + ", "
          + "standings=" + standings
          + "}";
      }
      return $toString;
    }
  }

  public static class Standings {
    public List<Node> nodes;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Standings(List<Node> nodes) {
      this.nodes = nodes;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Standings) {
        Standings that = (Standings) o;
        return ((this.nodes == null) ? (that.nodes == null) : this.nodes.equals(that.nodes));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (nodes == null) ? 0 : nodes.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Standings{"
          + "nodes=" + nodes
          + "}";
      }
      return $toString;
    }
  }

  public static class Node {
    public Integer placement;

    /**
     * If the entity this standing is assigned to can be resolved into an entrant, this will provide the entrant.
     */
    public Entrant entrant;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Node(Integer placement, Entrant entrant) {
      this.placement = placement;
      this.entrant = entrant;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Node) {
        Node that = (Node) o;
        return ((this.placement == null) ? (that.placement == null) : this.placement.equals(that.placement))
         &&((this.entrant == null) ? (that.entrant == null) : this.entrant.equals(that.entrant));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (placement == null) ? 0 : placement.hashCode();
        h *= 1000003;
        h ^= (entrant == null) ? 0 : entrant.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Node{"
          + "placement=" + placement + ", "
          + "entrant=" + entrant
          + "}";
      }
      return $toString;
    }
  }

  public static class Entrant {
    public String id;

    /**
     * The entrant name as it appears in bracket: gamerTag of the participant or team name
     */
    public String name;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    private transient volatile String $toString;

    public Entrant(String id, String name) {
      this.id = id;
      this.name = name;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Entrant) {
        Entrant that = (Entrant) o;
        return ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         &&((this.name == null) ? (that.name == null) : this.name.equals(that.name));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (id == null) ? 0 : id.hashCode();
        h *= 1000003;
        h ^= (name == null) ? 0 : name.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Entrant{"
          + "id=" + id + ", "
          + "name=" + name
          + "}";
      }
      return $toString;
    }
  }
}
